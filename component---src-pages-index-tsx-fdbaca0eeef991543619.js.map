{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","style","boxShadow","to","key","border","borderRadius","marginBottom","paddingLeft","marginTop","rhythm","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,0HA8EeA,UA9CG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,MAAO,CAAEC,UAAW,QAAUC,GAAIN,EAAKE,OAAOC,MAClD,6BAASI,IAAKP,EAAKE,OAAOC,KACxBC,MAAO,CACLI,OAAQ,kBACRC,aAAc,MACdC,aAAc,MACdC,YAAa,SAGf,gCACE,wBACEP,MAAO,CACLQ,UAAW,OACXF,aAAcG,YAAO,OAGtBlB,GAEH,+BAAQK,EAAKC,YAAYa,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,mBAe1D,IAAMC,EAAY","file":"component---src-pages-index-tsx-fdbaca0eeef991543619.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n            <article key={node.fields.slug}\n              style={{\n                border: 'solid 1px black',\n                borderRadius: '5px',\n                marginBottom: '4px',\n                paddingLeft: '20px',\n              }}\n            >\n              <header>\n                <h3\n                  style={{\n                    marginTop: '20px',\n                    marginBottom: rhythm(1.5),\n                  }}\n                >\n                  {title}\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          </Link>\n\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}