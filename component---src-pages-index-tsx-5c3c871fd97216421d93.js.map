{"version":3,"sources":["webpack:///./static/memosmaho.png","webpack:///./src/pages/index.tsx","webpack:///./static/memo.png"],"names":["module","exports","mv","require","mvs","mq","map","bp","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","srcSet","media","src","css","margin","overflow","height","content","display","clear","node","frontmatter","fields","slug","boxShadow","to","key","backgroundColor","opacity","border","width","rhythm","paddingLeft","float","color","transition","marginTop","marginBottom","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,yD,2KCSrCC,EAAKC,EAAQ,QACbC,EAAMD,EAAQ,QAIdE,EAFc,CAAC,IAAK,IAAK,KAAM,MAEdC,KACrB,SAAAC,GAAE,4BAA0BA,EAA1B,SA0HWC,UAhGG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAGrC,OACE,YAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAM,cACX,2BACE,sBAAQI,OAAQd,EAAKe,MAAM,uBAC3B,mBAAKC,IAAKlB,KAEZ,mBAAKmB,IAAG,YAAE,CACRC,OAAQ,OACRC,SAAU,SACVC,OAAQ,QACR,WAAY,CACVC,QAAS,KACTC,QAAS,QACTC,MAAO,WAGRZ,EAAMT,KAAI,YAAc,MAAXsB,EAAW,EAAXA,KACNd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KACpD,OACE,YAAC,OAAD,CAAMV,IAAG,YAAE,CACTW,UAAW,SACVC,GAAIL,EAAKE,OAAOC,MACjB,uBAASG,IAAKN,EAAKE,OAAOC,KACxBV,IAAG,gBACDK,QAAS,QACTS,gBAAiB,UACjBC,QAAS,EACTC,OAAQ,6BACRC,MAAOC,YAAO,IACdjB,OAAWiB,YAAO,GAAZ,IAAkBA,YAAO,IAAzB,KACNC,YAAa,GAAGD,YAAO,GACvBE,MAAO,OACPC,MAAO,UACPC,WAAY,MACZ,SAAU,CACRP,QAAS,KAZV,EAcA/B,EAAG,IAAK,CACPiC,MAAOC,YAAO,IACdjB,OAAQ,OACRsB,UAAWL,YAAO,KAjBnB,EAmBAlC,EAAG,IAAK,CACPiC,MAAOC,YAAO,IACdE,MAAO,OACPnB,OAAQ,OACRsB,UAAWL,YAAO,KAvBnB,EAyBAlC,EAAG,IAAK,CACPiC,MAAOC,YAAO,IACdE,MAAO,OACPnB,OAAQ,OACRsB,UAAWL,YAAO,KA7BnB,EA+BAlC,EAAG,IAAK,CACPiB,OAAQ,OACRsB,UAAWL,YAAO,IAClBD,MAAOC,YAAO,IACdE,MAAO,QAnCR,KAuCH,0BACE,kBACEpB,IAAG,YAAE,CACHuB,UAAWL,YAAO,GAClBM,aAAcN,YAAO,QAGtBzB,GAEH,yBAAQc,EAAKC,YAAYiB,OAE3B,2BACE,iBACEC,wBAAyB,CACvBC,OAAQpB,EAAKC,YAAYoB,aAAerB,EAAKsB,oBAgB5D,IAAMC,EAAY,c,qBC3IzBnD,EAAOC,QAAU,IAA0B","file":"component---src-pages-index-tsx-5c3c871fd97216421d93.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/memosmaho-5fa3b0e0bd273ff67df281e02fa7828d.png\";","// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport { css } from '@emotion/core'\n\n\nconst mv = require('../../static/memo.png')\nconst mvs = require('../../static/memosmaho.png')\n\nconst breakpoints = [360, 500, 1175, 1200]\n\nconst mq = breakpoints.map(\n  bp => `@media (max-width: ${bp}px)`\n)\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <picture>\n        <source srcSet={mvs} media=\"(max-width: 500px)\" />\n        <img src={mv} />\n      </picture>\n      <div css={{\n        margin: 'auto',\n        overflow: 'hidden',\n        height: `100 %`,\n        '&::after': {\n          content: '\"\"',\n          display: `block`,\n          clear: `both`\n        },\n      }}>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Link css={{\n              boxShadow: `none`,\n            }} to={node.fields.slug}>\n              <article key={node.fields.slug}\n                css={{\n                  display: 'block',\n                  backgroundColor: '#ede7cf',\n                  opacity: 1,\n                  border: 'solid 1px rgb(223,223,223)',\n                  width: rhythm(24),\n                  margin: `${rhythm(1)} ${rhythm(0.5)} 0`,\n                  paddingLeft: `${rhythm(1)}`,\n                  float: \"left\",\n                  color: \"#aa512f\",\n                  transition: \".3s\",\n                  ':hover': {\n                    opacity: 0.7,\n                  },\n                  [mq[2]]: {\n                    width: rhythm(22),\n                    margin: \"auto\",\n                    marginTop: rhythm(0.5),\n                  },\n                  [mq[2]]: {\n                    width: rhythm(22),\n                    float: 'none',\n                    margin: \"auto\",\n                    marginTop: rhythm(0.5),\n                  },\n                  [mq[1]]: {\n                    width: rhythm(15),\n                    float: 'none',\n                    margin: \"auto\",\n                    marginTop: rhythm(0.5),\n                  },\n                  [mq[0]]: {\n                    margin: \"auto\",\n                    marginTop: rhythm(0.5),\n                    width: rhythm(13),\n                    float: 'none',\n                  }\n                }}\n              >\n                <header>\n                  <h3\n                    css={{\n                      marginTop: rhythm(1),\n                      marginBottom: rhythm(1.5),\n                    }}\n                  >\n                    {title}\n                  </h3>\n                  <small>{node.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </section>\n              </article>\n            </Link>\n\n          )\n        })}\n      </div>\n    </Layout >\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/memo-c9858f4bc7378330a99080dc7fba8b67.png\";"],"sourceRoot":""}