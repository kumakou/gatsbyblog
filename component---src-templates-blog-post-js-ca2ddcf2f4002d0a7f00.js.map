{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","latest","frontmatter","description","excerpt","css","padding","rhythm","backgroundColor","opacity","marginBottom","marginTop","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","to","fields","slug","rel","pageQuery"],"mappings":"8OAiGeA,UAxFU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAA2BR,EAA3BQ,SAAUC,EAAiBT,EAAjBS,KAAMC,EAAWV,EAAXU,OAExB,OACE,YAAC,IAAD,CAAQT,SAAUA,EAAUM,MAAOH,GACjC,YAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,uBACEC,IAAG,YAAE,CACHC,QAAYC,YAAO,GAAZ,IAAkBA,YAAO,GAAzB,IAA+BA,YAAO,GAC7CC,gBAAiB,UACjBC,QAAS,GACTC,aAAcH,YAAO,MAGvB,0BACE,kBACEF,IAAG,YAAE,CACHM,UAAWJ,YAAO,GAClBG,aAAc,KAGfjB,EAAKS,YAAYJ,OAEpB,iBACEO,IAAG,6BACEO,aAAM,IADR,CAEDC,QAAQ,QACRH,aAAcH,YAAO,OAGtBd,EAAKS,YAAYY,OAGtB,uBAASC,wBAAyB,CAAEC,OAAQvB,EAAKwB,QACjD,kBACEZ,IAAG,YAAE,CACHK,aAAcH,YAAO,QAM3B,mBACEF,IAAG,YAAE,CACHC,QAAQ,KAAMC,YAAO,GAAd,QAET,kBACEF,IAAG,YAAE,CACHQ,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,UAGZ,sBACGrB,GACC,YAAC,OAAD,CAAMsB,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAApC,KACKzB,EAASG,YAAYJ,QAI9B,sBACGE,GACC,YAAC,OAAD,CAAMqB,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKE,YAAYJ,MADpB,SAOR,mBACEO,IAAG,YAAE,CACHC,QAAQ,KAAMC,YAAO,GAAd,QAERN,GACC,YAAC,OAAD,CAAMoB,GAAIpB,EAAOqB,OAAOC,KAAMC,IAAI,QAC/BvB,EAAOC,YAAYJ,UASzB,IAAM2B,EAAS","file":"component---src-templates-blog-post-js-ca2ddcf2f4002d0a7f00.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n//import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport { css } from '@emotion/core'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next, latest } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        css={{\n          padding: `${rhythm(1)} ${rhythm(1)} ${rhythm(1)}`,\n          backgroundColor: '#ede7cf',\n          opacity: 0.8,\n          marginBottom: rhythm(1),\n        }}\n      >\n        <header>\n          <h1\n            css={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            css={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          css={{\n            marginBottom: rhythm(1),\n          }}\n        />\n\n      </article>\n\n      <nav\n        css={{\n          padding: `0 ${rhythm(1)} 0`,\n        }}>\n        <ul\n          css={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <div\n        css={{\n          padding: `0 ${rhythm(1)} 0`,\n        }}>\n        {latest && (\n          <Link to={latest.fields.slug} rel=\"prev\">\n            {latest.frontmatter.title}\n          </Link>)}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title,\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}